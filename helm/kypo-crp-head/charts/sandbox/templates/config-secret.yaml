apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.global.services.sandbox.name }}-secret
  labels: {{- include "common.labels" (dict "name" .Values.global.services.sandbox.name "chart" .Chart "release" .Release "extraLabels" .Values.extraLabels) | nindent 4 }}
type: Opaque
stringData:
  config.yml: |
    # Name of the microservice.
    #microservice_name: kypo-sandbox-service

    # A prefix of the stack in the cloud with maximum 8 characters.
    stack_name_prefix: {{ .Values.stackNamePrefix }}

    # A boolean that turns on/off debug mode.
    # SECURITY WARNING: don't run with debug turned on in production!
    debug: False

    # A list of strings representing the host/domain names that this Django site can serve.
    #allowed_hosts: []

    # If True, the whitelist will not be used and all origins will be accepted.
    cors_origin_allow_all: False

    # A list of origins that are authorized to make cross-site HTTP requests.
    {{- if .Values.global.corsWhitelist }}
    cors_origin_whitelist: ["https://{{ .Values.global.headHost }}",{{- range $index, $origin := .Values.global.corsWhitelist -}}{{ if $index }},{{ end }}"{{ $origin }}"{{- end }}]
    {{- else }}
    cors_origin_whitelist: ["https://{{ .Values.global.headHost }}"]
    {{- end }}

    authentication:
        # Whether the REST API authentication is on.
        # If set to False, other authentication variables are not used.
        authenticated_rest_api: True

        # List of OIDC provider host/domain names that are allowed.
        allowed_oidc_providers:
    {{- range .Values.global.oidcProviders }}
              - issuer: {{ .issuerIdentifier | default .url | trimSuffix "/" }}
                userinfo_endpoint: {{ .userInfoUrl | default "" }}
    {{- end }}
        # User and Group roles registration endpoint URL.
        roles_registration_url: "http://{{ .Values.global.services.userAndGroup.name }}:{{ .Values.global.services.userAndGroup.port }}{{ .Values.global.services.userAndGroup.contextPath }}microservices"

        # User and Group roles acquisition endpoint URL.
        roles_acquisition_url: "http://{{ .Values.global.services.userAndGroup.name }}:{{ .Values.global.services.userAndGroup.port }}{{ .Values.global.services.userAndGroup.contextPath }}users/info"

    application_configuration:
        # The IP address of the KYPO head server.
        kypo_head_ip: {{ .Values.kypoHeadIp }}

        # The URL of OpenStack Identity service API.
        os_auth_url: {{ .Values.osAuthUrl }}

        # The ID of application credentials to authenticate at OpenStack cloud platform.
        os_application_credential_id: {{ .Values.osApplicationCredentialId }}

        # The secret string of APPLICATION_CREDENTIAL_ID.
        os_application_credential_secret: {{ .Values.osApplicationCredentialSecret }}

        # The OpenStack console type. One of: novnc, xvpvnc, spice-html5, rdp-html5, serial, webmks.
        os_console_type: {{ .Values.osConsoleType }}

        # The path to project log file.
        #log_file: kypo-sandbox-service.log

        # The level of log verbosity. One of: NOTSET, DEBUG, INFO, WARNING, ERROR, FATAL, CRITICAL.
        #log_level: INFO

        # The name of user used for communication with Git repository.
        git_user: {{ .Values.gitConfig.user }}

        # The map of Gitlab providers with credentials.
        {{- if .Values.gitConfig.providers }}
        git_providers: {{ toJson .Values.gitConfig.providers }}
        {{- else }}
        git_providers: {}
        {{- end }}

        # The URL of Ansible networking Git repository.
        ansible_networking_url: {{ .Values.gitConfig.ansibleNetworkingUrl }}

        # The rev of Ansible networking Git repository.
        ansible_networking_rev: {{ .Values.gitConfig.ansibleNetworkingRev }}

        # The pattern to be replaced in image names of sandbox definitions.
        image_naming_strategy:
            pattern: ^munikypo/
            replace: ''

        #The mapping of flavor names to be replaced in sandbox definition.
        #flavor_mapping: {}

        # The object that represents SSH Host entry (see man page of ssh_config).
        proxy_jump_to_man:
            Host: {{ .Values.proxyHost }}
            User: {{ .Values.proxyUser }}
            IdentityFile: /root/.ssh/kypo-crp-proxy-key

        # Timeout of sandbox (stack) creation in cloud in seconds.
        sandbox_build_timeout: {{ .Values.sandboxBuildTimeout }}

        # Timeout of sandbox (stack) deletion in cloud in seconds.
        sandbox_delete_timeout: {{ .Values.sandboxDeleteTimeout }}

        # Timeout for Ansible.
        sandbox_ansible_timeout: {{ .Values.sandboxAnsibleTimeout }}

        # The name of the Docker image that is able to run Ansible playbook.
        ansible_docker_image: {{ .Values.ansibleRunner.image.url }}:{{ .Values.ansibleRunner.image.tag }}

        # The settings for the ansible runner container.
        ansible_runner_settings:
          # The container backend. One of: docker, kubernetes.
          backend: kubernetes

          # The namespace where the container will be created. Only used when backend is kubernetes.
          namespace: {{ .Release.Namespace }}

          # The path to local temporary directory where KYPO will prepare Docker volumes if container
          # backend is set to docker. Path to temporary directory of similar purpose in persistent
          # volume if backend is kubernetes.
          volumes_path: /var/opt/kypo/kypo-ansible-runner-volumes

          # Name of persistent volume claim, only used when backend is kubernetes.
          persistent_volume_claim_name: sandbox-service

        # Answers storage base URL.
        answers_storage_api: http://{{ .Values.global.services.answersStorage.name }}:{{ .Values.global.services.answersStorage.port }}{{ .Values.global.services.answersStorage.contextPath }}

        # The name of the Docker network that the Runner will use.
        ansible_docker_network: {{ .Values.ansibleDockerNetwork }}

        # A path to directory of CA certificates or file of CA certificates, i.e. CA bundle.
        # Use in case of self-signed certificates in related services.
        ssl_ca_certificate_verify: /etc/ssl/certs/ca-certificates.crt

        # Configuration for KYPO Terraform client
        terraform_configuration:
            # The type of backend that Terraform is using. The 'local' is suitable only for the
            # development, for production use 'pg'
            backend_type: {{ .Values.global.kypoTerraformBackendType }}

        # SMPT server used for sending the email notifications
        smtp_server: "{{ .Values.smtpServer }}"

        # Port used by the used protocol, ex. ssl: 465
        smtp_port: {{ .Values.smtpPort }}

        # Email used to send allocation notifications
        sender_email: "{{ .Values.senderEmail }}"

        # Password for sender_email, LEAVE BLANK for unauthenticated and unsecured emails
        sender_email_password: "{{ .Values.senderEmailPassword }}"

        sandbox_configuration:
            # The name or ID of network in OpenStack where all sandboxes will be deployed.
            base_network: kypo-base-net

            # The name of the image in OpenStack that will be used for MAN.
            man_image: "{{ .Values.manImage }}"

            # The name of user in MAN.
            man_user: "debian"

            # The name of the flavor in OpenStack that will be used for MAN.
            man_flavor: "{{ .Values.manFlavor }}"

            # The cidr notation of network between MAN and every other node in sandbox.
            #sb_man_cidr: 192.168.128.0/17

            # The list of IP addresses to custom DNS servers.
            dns_name_servers: [{{ join "," .Values.dnsNameServers }}]

        # Django database settings.
        database:
            # The database backend to use.
            engine: "django.db.backends.postgresql"

            # Which host to use when connecting to the database.
            host: {{ .Values.global.postgres.serviceName }}

            # The port to use when connecting to the database.
            port: "{{ .Values.global.postgres.port }}"

            # The name of the database to use.
            name: {{ .Values.global.postgresServices.sandbox.dbName }}

            # The password to use when connecting to the database.
            password: {{ .Values.global.postgresServices.sandbox.dbPassword }}

            # The username to use when connecting to the database.
            user: {{ .Values.global.postgresServices.sandbox.dbUser }}

        redis:
            host: {{ .Values.global.redis.serviceName }}
            port: {{ .Values.global.redis.port }}
            db: {{ .Values.global.redis.db }}
