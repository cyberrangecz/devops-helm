{{- with .Values.postgres }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .name }}
  labels: {{- include "common.labels" (dict "name" .name "chart" $.Chart "release" $.Release "extraLabels" $.extraLabels) | nindent 4 }}
spec:
  selector:
    matchLabels: {{- include "common.matchLabels" (dict "name" .name "release" $.Release) | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels: {{- include "common.labels" (dict "name" .name "chart" $.Chart "release" $.Release "extraLabels" $.extraLabels) | nindent 8 }}
    spec:
      {{- if .securityContext }}
      securityContext:
        {{- toYaml .securityContext | nindent 6 }}
      {{- end }}
      containers:
        - name: {{ .name }}
          image: "{{ .image.url }}:{{ .image.tag }}"
          args:
            {{- range $parameters := $.Values.parameters }}
            - "-c"
            - {{ $parameters }}
            {{- end }}
          env:
            - name: POSTGRES_PASSWORD
              value: {{ .password | quote }}
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          ports:
            {{- range .ports }}
            - containerPort: {{ .port }}
              name: postgre-{{ .port }}
            {{- end }}
          readinessProbe:
            {{- range .ports }}
            {{- if eq .protocol "TCP" }}
            tcpSocket:
              port: {{ .port }}
            initialDelaySeconds: 5
            periodSeconds: 10
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: {{ .name }}-data
              mountPath: /var/lib/postgresql/data/
      volumes:
        - name: {{ .name }}-data
          persistentVolumeClaim:
            claimName: {{ .name }}
{{- end }}
