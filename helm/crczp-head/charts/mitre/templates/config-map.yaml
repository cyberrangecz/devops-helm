apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.global.services.mitre.name }}-configmap
  labels: {{- include "common.labels" (dict "name" .Values.global.services.mitre.name "chart" .Chart "release" .Release "extraLabels" .Values.extraLabels) | nindent 4 }}
data:
  config.yml: |
    # Name of the microservice.
    #microservice_name: crczp-mitre-technique-service

    # A boolean that turns on/off debug mode.
    # SECURITY WARNING: don't run with debug turned on in production!
    debug: False

    # A list of strings representing the host/domain names that this Django site can serve.
    #allowed_hosts: []

    # If True, the whitelist will not be used and all origins will be accepted.
    cors_origin_allow_all: False

    # A list of origins that are authorized to make cross-site HTTP requests.
    {{- if .Values.global.corsWhitelist }}
    cors_origin_whitelist: ["https://{{ .Values.global.headHost }}",{{- range $index, $origin := .Values.global.corsWhitelist -}}{{ if $index }},{{ end }}"{{ $origin }}"{{- end }}]
    {{- else }}
    cors_origin_whitelist: ["https://{{ .Values.global.headHost }}"]
    {{- end }}

    application_configuration:
        # A path to directory of CA certificates or file of CA certificates, i.e. CA bundle.
        # Use in case of self-signed certificates in related services.
        ssl_ca_certificate_verify: /etc/ssl/certs/ca-certificates.crt

        # An address of java linear training endpoint
        java_linear_training_mitre_endpoint: "http://{{ .Values.global.services.training.name }}:{{ .Values.global.services.training.port }}{{ .Values.global.services.training.contextPath }}visualizations/training-definitions/mitre-techniques"

        # An address of java adaptive training endpoint
        java_adaptive_training_mitre_endpoint: "http://{{ .Values.global.services.adaptiveTraining.name }}:{{ .Values.global.services.adaptiveTraining.port }}{{ .Values.global.services.adaptiveTraining.contextPath }}visualizations/training-definitions/mitre-techniques"

        # The location of jinja template and the locally stored MITRE data
        file_storage_location: {{ .Values.fileStorage }}

        redis:
            host: {{ .Values.global.redis.serviceName }}
            port: {{ .Values.global.redis.port }}
            db: {{ .Values.redis.db }}
